openapi: "3.0.0"
info:
  description: "Bank API"
  version: "1.0.0"
  title: "Bank API"
  contact:
    email: "refactorizando.web@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:8000/
    description: "local host"
paths:
  /users:
    get:
      tags:
        - "user"
      summary: "Find a collection of users"
      operationId: "getUsers"
      responses:
        200:
          description: "Retrieve users"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/User"
        400:
          description: "BadRequest"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Error"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Error"
        503:
          description: "Service unavailable"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Error"

  /users/{id}:
    parameters:
      - name: id
        in: path
        description: ID del usuario
        required: true
        schema:
          type: integer
    get:
      summary: Obtener un usuario por ID
      operationId: "getUser"
      responses:
        200:
          description: "Retrieve user"
          content:
            application/json:
              schema:
                type: "object"
                items:
                  $ref: "#/components/schemas/User"
        '404':
          description: User not found
    put:
      summary: Actualizar un usuario por ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              items:
                $ref: "#/components/schemas/User"
      responses:
        '200':
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                type: "object"
                items:
                  $ref: "#/components/schemas/User"
        '404':
          description: Usuario no encontrado
    delete:
      summary: User delete per ID
      operationId: "delete"
      responses:
        '204':
          description: Usuario eliminado correctamente
        '404':
          description: Usuario no encontrado

components:
  schemas:
    User:
      type: "object"
      required:
        - "id"
        - "password"
        - "mail"
      properties:
        id:
          type: "integer"
          format: "int64"
        password:
          type: "string"
          example: "MyPassord222"
        name:
          type: "string"
          example: "Francisco Mart√≠n"
        mail:
            type: "string"
            example: "garofolo.leonel@gmail.com"
        address:
          type: "string"
          example: "Avendia de la zarzuela"
        phone:
          type: "string"
          example: "+00 6656545"
        postalCode:
          type: "string"
          example: "28007"


    Error:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "32"
        message:
          type: "string"
        description:
          type: "string"